{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth-manager.service.ts","./src/app/date-time-input-group/date-time-input-group.component.ts","./src/app/date-time-input-group/date-time-input-group.component.html","./src/app/form-control/form-control.component.ts","./src/app/form-control/form-control.component.html","./src/app/home-page/home-page.component.ts","./src/app/home-page/home-page.component.html","./src/app/is-anonymous.guard.ts","./src/app/is-logged.guard.ts","./src/app/login-page/login-page.component.ts","./src/app/login-page/login-page.component.html","./src/app/message.service.ts","./src/app/registration-page/registration-page.component.ts","./src/app/registration-page/registration-page.component.html","./src/app/self-closing-alert/self-closing-alert.component.ts","./src/app/self-closing-alert/self-closing-alert.component.html","./src/app/todo-item-form/todo-item-form.component.ts","./src/app/todo-item-form/todo-item-form.component.html","./src/app/todo-item-manager.service.ts","./src/app/todo-search-form/todo-search-form.component.ts","./src/app/todo-search-form/todo-search-form.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { RegistrationPageComponent } from './registration-page/registration-page.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { IsLoggedGuard } from './is-logged.guard';\nimport { IsAnonymousGuard } from './is-anonymous.guard';\n\nconst routes: Routes = [\n  { path: '', component: HomePageComponent, canActivate: [IsLoggedGuard] },\n  { path: 'login', component: LoginPageComponent, canActivate: [IsAnonymousGuard] },\n  { path: 'registration', component: RegistrationPageComponent, canActivate: [IsAnonymousGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { ApiResponse } from './api-response';\nimport { AuthManagerService } from './auth-manager.service';\nimport { MessageService } from './message.service';\n\n@Injectable()\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title: string = 'my-app';\n  response$: Observable<ApiResponse> | null = null;\n  error: string | null = null;\n\n  constructor(\n    public router: Router,\n    public authManager: AuthManagerService,\n    public messageService: MessageService,\n    private http: HttpClient\n  ) { }\n\n  logout(e: Event) {\n    e.preventDefault();\n    this.http\n      .post<ApiResponse>('api/logout', {})\n      .pipe(\n        catchError((resp: HttpErrorResponse) => {\n          this.authManager.updateSession();\n          this.error = resp.error?.error || null;\n          return throwError(() => new Error('Something bad happened; please try again later.'));\n        })\n      )\n      .subscribe((response: ApiResponse) => {\n        this.authManager.updateSession();\n        if (response.message) {\n          this.messageService.add(response.message);\n        }\n        this.router.navigate(['/login']);\n      });\n  }\n\n  trackByFn(i: number) {\n    // this.messageService.delete(i);\n    return i;\n  }\n}\n","<nav class=\"navbar navbar-expand-sm navbar-dark bg-success\">\n    <div class=\"container-fluid\">\n        <a class=\"navbar-brand\" routerLink=\"/\">Todo</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav ms-auto mb-2 mb-lg-0\">\n                <li *ngIf=\"authManager.isLogged()\" class=\"nav-item\">\n                    <a \n                        routerLink=\"/\" \n                        routerLinkActive=\"is-active\" \n                        [class.active]=\"router.isActive('/', true)\"\n                        [routerLinkActiveOptions]=\"{ exact: true }\"\n                        class=\"nav-link\" \n                    >\n                        Home\n                    </a>\n                </li>\n                <li *ngIf=\"!authManager.isLogged()\" class=\"nav-item\">\n                    <a \n                        routerLink=\"/login\" \n                        routerLinkActive=\"is-active\" \n                        [class.active]=\"router.isActive('/login', false)\"\n                        [routerLinkActiveOptions]=\"{ exact: true }\"\n                        class=\"nav-link\" \n                    >\n                        Login\n                    </a>\n                </li>\n                <li *ngIf=\"!authManager.isLogged()\" class=\"nav-item\">\n                    <a \n                        routerLink=\"/registration\" \n                        routerLinkActive=\"is-active\" \n                        [class.active]=\"router.isActive('/registration', false)\"\n                        [routerLinkActiveOptions]=\"{ exact: true }\"\n                        class=\"nav-link\" \n                    >\n                        Registration\n                    </a>\n                </li>\n                <li *ngIf=\"authManager.isLogged()\" class=\"nav-item\">\n                    <a \n                        class=\"nav-link\" \n                        (click)=\"logout($event)\" \n                        style=\"cursor:pointer;\"\n                    >\n                        Logout\n                    </a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</nav>\n\n<div class=\"container py-4\">\n    <app-self-closing-alert \n        *ngFor=\"let message of messageService.all()\" \n        [message]=\"message\"\n    ></app-self-closing-alert>\n\n    <!-- <ngb-alert \n        *ngFor=\"let message of messageService.all()\" \n        #selfClosingAlert \n        [dismissible]=\"true\" \n        [type]=\"message.type\" \n        (closed)=\"messageService.delete(message)\"\n    >\n        {{message.content}}\n    </ngb-alert> -->\n\n    <router-outlet></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { RegistrationPageComponent } from './registration-page/registration-page.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { TodoItemFormComponent } from './todo-item-form/todo-item-form.component';\nimport { TodoSearchFormComponent } from './todo-search-form/todo-search-form.component';\nimport { DateTimeInputGroupComponent } from './date-time-input-group/date-time-input-group.component';\nimport { FormControlComponent } from './form-control/form-control.component';\nimport { SelfClosingAlertComponent } from './self-closing-alert/self-closing-alert.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginPageComponent,\n    RegistrationPageComponent,\n    HomePageComponent,\n    TodoItemFormComponent,\n    TodoSearchFormComponent,\n    DateTimeInputGroupComponent,\n    FormControlComponent,\n    SelfClosingAlertComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    NgbModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, throwError } from 'rxjs';\nimport { ApiResponse } from './api-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthManagerService {\n\n  constructor(private http: HttpClient) { }\n\n  updateSession() {\n    let match: Array<any> | null = document.cookie.match(/(?:^|\\s)session-expiry=([^;]+)/);\n    if (match !== null && match.length > 0) {\n      localStorage.setItem('session-expiry', match[1]);\n    }\n  }\n\n  isLogged() {\n    let expiry = localStorage.getItem('session-expiry') || '0';\n    \n    return parseInt(expiry) >= (new Date().getTime() / 1000);\n  }\n\n  keepSessionAlive() {\n    this.http.get<ApiResponse>('api/keep-alive')\n      .pipe(\n        catchError((response: HttpErrorResponse) => {\n          this.updateSession();\n          \n          return throwError(() => new Error('Something gone wrong.'));\n        })\n      )\n      .subscribe((response: ApiResponse) => {\n        this.updateSession();\n      });\n  }\n}\n","import { Component, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'app-date-time-input-group',\n  templateUrl: './date-time-input-group.component.html',\n  styleUrls: ['./date-time-input-group.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => DateTimeInputGroupComponent),\n    }\n  ]\n})\nexport class DateTimeInputGroupComponent implements ControlValueAccessor {\n  @Input() label!: string;\n  @Input() name!: string;\n  @Input() value!: string | null;\n  private _date!: string | null;\n  private _time!: string | null;\n\n  get date(): string | null {\n    return this.getDate();\n  }\n\n  set date(value: string | null) {\n    this._date = value;\n    this.updateValue();\n    this.propagateChange(this.value);\n  }\n\n  get time(): string | null {\n    return this.getTime();\n  }\n\n  set time(value: string | null) {\n    this._time = value;\n    this.updateValue();\n    this.propagateChange(this.value);\n  }\n\n  writeValue(value: any): void {\n    if (value !== undefined) {\n      this.value = value;\n      this._date = this.getDate();\n      this._time = this.getTime();\n    }\n  }\n  \n  propagateChange = (_: any) => {};\n\n  registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n  \n  registerOnTouched(fn: any): void { }\n  \n  setDisabledState(isDisabled: boolean): void { }\n\n  updateValue(): void {\n    if (this._date && this._time) {\n      this.value = this._date + ' ' + this._time + ':00';\n    } else if (this._date || this._time) {\n      let today = new Date();\n      let day = (today.getDate() < 10 ? '0' : '') + today.getDate();\n      let month = (today.getMonth() < 9 ? '0' : '') + (today.getMonth() + 1);\n      let date = this._date || `${today.getFullYear()}-${month}-${day}`;\n      let time = this._time ? (this._time + ':00') : '00:00:00';\n      this.value = date + ' ' + time;\n    } else {\n      this.value = null;\n    }\n  }\n\n  getDate(): string | null {\n    if (this.value) {\n      let [date, _] = this.value.split(' ');\n      return date;\n    } else {\n      return null;\n    }    \n  }\n\n  getTime(): string | null {\n    if (this.value) {\n      let [_, time] = this.value.split(' ');\n      return time;\n    } else {\n      return null;\n    }\n  }\n}\n","<div class=\"input-group my-3\">\n    <label [for]=\"name+'From'\" class=\"form-label w-100\">{{label}}</label>\n    <input [(ngModel)]=\"time\" type=\"time\" [id]=\"name+'Time'\" [name]=\"name+'_time'\" class=\"form-control\" style=\"border-radius:6px 0 0 6px;\">\n    <input [(ngModel)]=\"date\" type=\"date\" [id]=\"name+'Date'\" [name]=\"name+'_date'\" class=\"form-control\" style=\"border-radius:0 6px 6px 0;\">\n</div>","import { Component, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'app-form-control',\n  templateUrl: './form-control.component.html',\n  styleUrls: ['./form-control.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => FormControlComponent),\n    }\n  ]\n})\nexport class FormControlComponent implements ControlValueAccessor {\n  @Input() label!: string;\n  @Input() name: string = '';\n  @Input() error: string | null = null;\n  @Input() type: string = 'text';\n  private _value!: any;\n\n  set value(value: any) {\n    this._value = value;\n    this.propagateChange(this._value);\n    this.removeError();\n  }\n\n  get value(): any {\n    return this._value;\n  }\n\n  writeValue(value: any): void {\n    if (value !== undefined) {\n      this._value = value;\n    }\n  }\n  \n  propagateChange = (_: any) => {};\n\n  registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n  \n  registerOnTouched(fn: any): void { }\n  \n  setDisabledState(isDisabled: boolean): void { }\n\n  removeError(): void {\n    this.error = null;\n  }\n}\n","<div class=\"my-3\">\n    <label for=\"statusInput\" class=\"form-label\">{{label}}</label>\n    <input \n        *ngIf=\"type !== 'textarea'\"\n        [(ngModel)]=\"value\"\n        [type]=\"type\" \n        [name]=\"name\" \n        [id]=\"name\" \n        class=\"form-control\"\n    >\n    <textarea \n        *ngIf=\"type === 'textarea'\"\n        [(ngModel)]=\"value\"\n        [name]=\"name\" \n        [id]=\"name\" \n        class=\"form-control\"\n    ></textarea>\n    <small *ngIf=\"error\" class=\"text-danger my-3\">{{error}}</small>\n</div>","import { Component, Injectable, ViewChild } from '@angular/core';\nimport { TodoItemFormComponent } from '../todo-item-form/todo-item-form.component';\nimport { TodoItem, TodoItemManagerService } from '../todo-item-manager.service';\n\n@Injectable()\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent {\n  @ViewChild('todoItemForm') todoItemForm!: TodoItemFormComponent;\n  currentTodoItem: TodoItem = this.todoItemManager.emptyTodoItem();\n\n  constructor(public todoItemManager: TodoItemManagerService) { }\n\n  ngOnInit(): void {\n    this.todoItemManager.load();\n  }\n\n  editItem(item: TodoItem): void {\n    this.todoItemForm.open();\n    this.currentTodoItem = this.todoItemManager.cloneTodoItem(item);\n  }\n\n  deleteItem(item: TodoItem): void {\n    if (confirm('Are you sure you want to delete this item?')) {\n      this.todoItemManager.delete(item);\n    }\n  }\n}\n","<div class=\"d-block\">\n    <h1>Todo</h1>\n    <app-todo-item-form #todoItemForm [todoItem]=\"currentTodoItem\"></app-todo-item-form>\n    <app-todo-search-form></app-todo-search-form>\n</div>\n\n<div class=\"row\">\n    <div *ngFor=\"let item of todoItemManager.filteredTodoItems\" class=\"col-12 col-md-6 col-lg-4 mt-3\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">\n                    <button class=\"btn btn-sm btn-primary\" (click)=\"editItem(item)\">Edit</button>\n                    <button class=\"btn btn-sm btn-danger\" (click)=\"deleteItem(item)\">Delete</button>\n                </h5>\n                <small class=\"card-text d-block\">Created at: {{item.created_at}}</small>\n                <small class=\"card-text d-block\">Status: {{item.status}}</small>\n                <small *ngIf=\"item.deadline\" class=\"card-text d-block\">Deadline: {{item.deadline}}</small>\n                <p class=\"card-text\">{{item.text}}</p>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { AuthManagerService } from './auth-manager.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IsAnonymousGuard implements CanActivate {\n\n  constructor(\n    private router: Router,\n    private authManager: AuthManagerService\n  ) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.authManager.isLogged()) {\n      return this.router.parseUrl('/');\n    } else {\n      return true;\n    }\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { AuthManagerService } from './auth-manager.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IsLoggedGuard implements CanActivate {\n\n  constructor(\n    private router: Router,\n    private authManager: AuthManagerService\n  ) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.authManager.isLogged()) {\n      return true;\n    } else {\n      return this.router.parseUrl('/login');\n    }\n  }\n  \n}\n","import { Component, Injectable } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { ApiResponse } from '../api-response';\nimport { AuthManagerService } from '../auth-manager.service';\nimport { MessageService } from '../message.service';\n\n@Injectable()\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent {\n  error: string | null = null;\n\n  constructor(\n    private http: HttpClient,\n    private authManager: AuthManagerService,\n    private router: Router,\n    private messageService: MessageService\n  ) { }\n\n  onSubmit(form: NgForm) {\n    this.http\n      .post<ApiResponse>('api/login', form.value)\n      .pipe(\n        catchError((response: HttpErrorResponse) => {\n          this.authManager.updateSession();\n          this.error = response.error.error;\n          \n          return throwError(() => new Error('Login failed.'));\n        })\n      )\n      .subscribe((response: ApiResponse) => {\n        this.authManager.updateSession();\n        if (response.message) {\n          this.messageService.add(response.message);\n        }\n        this.router.navigate(['/']);\n      });\n  }\n\n  removeError() {\n    this.error = null\n  }\n}\n","<h1>Login</h1>\n\n<form #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit(loginForm)\">\n    \n    <app-form-control #emailInput ngModel label=\"Email\" name=\"email\" type=\"email\"></app-form-control>\n    <app-form-control #passwordInput ngModel label=\"Password\" name=\"password\" type=\"password\" [error]=\"error\"></app-form-control>\n\n    <button type=\"submit\" class=\"btn btn-success btn-block w-100\">Login</button>\n</form>","import { Injectable } from '@angular/core';\n\nexport class Message {\n  constructor(\n    public content: string,\n    public type: string = 'success'\n  ) { }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  messages: Message[] = [];\n\n  all(): Message[] {\n    return this.messages;\n  }\n\n  add(message: string, type: string = 'success'): void {\n    this.messages.push(new Message(message, type));\n  }\n\n  delete(message: Message): void {\n    this.messages.splice(this.messages.indexOf(message), 1);\n  }\n}\n","import { Component, Injectable } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { ApiResponse } from '../api-response';\nimport { MessageService } from '../message.service';\n\n@Injectable()\n@Component({\n  selector: 'app-registration-page',\n  templateUrl: './registration-page.component.html',\n  styleUrls: ['./registration-page.component.css']\n})\nexport class RegistrationPageComponent {\n  errors: { [field: string]: (string | null) } = {};\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private messageService: MessageService\n  ) { }\n\n  onSubmit(form: NgForm) {\n    this.http\n      .post<ApiResponse>('api/registration', form.value)\n      .pipe(\n        catchError((response: HttpErrorResponse) => {\n          if (response.error.errors) {\n            this.errors = response.error.errors;\n          }\n          \n          return throwError(() => new Error('Registration failed.'));\n        })\n      )\n      .subscribe((response: ApiResponse) => {\n        if (response.message) {\n          this.messageService.add(response.message);\n        }\n        this.router.navigate(['/']);\n      });\n  }\n\n  removeError(field: string) {\n    this.errors[field] = null;\n  }\n}\n","<h1>Login</h1>\n\n<form #registrationForm=\"ngForm\" (ngSubmit)=\"onSubmit(registrationForm)\">\n    <app-form-control \n        #emailInput \n        ngModel \n        label=\"Email\" \n        name=\"email\" \n        type=\"email\" \n        [error]=\"errors['email']\"\n    ></app-form-control>\n\n    <app-form-control \n        #passwordInput \n        ngModel \n        label=\"Password\" \n        name=\"password\" \n        type=\"password\" \n        [error]=\"errors['password']\"\n    ></app-form-control>\n    \n    <app-form-control \n        #repeatPasswordInput \n        ngModel \n        label=\"Repeat password\" \n        name=\"repeat_password\" \n        type=\"password\"\n    ></app-form-control>\n\n    <button type=\"submit\" class=\"btn btn-success btn-block w-100\">Register</button>\n</form>","import { Component, OnInit, Input } from '@angular/core';\nimport { Message, MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-self-closing-alert',\n  templateUrl: './self-closing-alert.component.html',\n  styleUrls: ['./self-closing-alert.component.css']\n})\nexport class SelfClosingAlertComponent implements OnInit {\n  @Input() message!: Message;\n  @Input() delay: number = 10;\n\n  constructor(public messageService: MessageService) { }\n\n\tngOnInit(): void {\n\t\tsetTimeout(() => this.messageService.delete(this.message), this.delay * 1000);\n\t}\n}","<ngb-alert \n    #selfClosingAlert \n    [dismissible]=\"true\" \n    [type]=\"message.type\" \n    (closed)=\"messageService.delete(message)\"\n>\n    {{message.content}}\n</ngb-alert>","import { Component, Injectable, Input, ViewChild } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ApiResponse } from '../api-response';\nimport { TodoItem, TodoItemManagerService } from '../todo-item-manager.service';\n\n@Injectable()\n@Component({\n  selector: 'app-todo-item-form',\n  templateUrl: './todo-item-form.component.html',\n  styleUrls: ['./todo-item-form.component.css']\n})\nexport class TodoItemFormComponent {\n  @Input() todoItem!: TodoItem;\n  @Input() todoItems!: TodoItem[];\n  @ViewChild('todoFormModal') todoFormModal!: any;\n  errors: { [field: string]: (string | null) } = {};\n  emptyTodoItem: () => TodoItem = this.todoItemManager.emptyTodoItem;\n\n  constructor(\n    private todoItemManager: TodoItemManagerService,\n    private modalService: NgbModal\n  ) { }\n\n  open(): void {\n\t\tthis.modalService.open(this.todoFormModal, { ariaLabelledBy: 'modal-basic-title' }).result.then(() => {}, () => {});\n\t}\n\n  onSubmit(): void {\n    let data: { [key: string]: string } = {};\n\n    if (this.todoItem.deadline) {\n      data = {\n        text: this.todoItem.text,\n        status: this.todoItem.status,\n        deadline: this.todoItem.deadline\n      };\n    } else {\n      data = {\n        text: this.todoItem.text,\n        status: this.todoItem.status\n      };\n    }\n\n    let successCallback = (response: ApiResponse) => {\n      this.modalService.dismissAll();\n    };\n    \n    let failureCallback = (response: HttpErrorResponse) => {\n      if (response.error.errors) {\n        this.errors = response.error.errors;\n      }\n    };\n\n    if (this.todoItem.id) {\n      this.todoItemManager.update(this.todoItem, data, successCallback, failureCallback);\n    } else {\n      this.todoItemManager.create(this.todoItem, data, successCallback, failureCallback);\n    }\n  }\n}\n","<button class=\"btn btn-success mr-3\" (click)=\"todoItem = emptyTodoItem(); open()\">\n    Create todo\n</button>\n\n<ng-template #todoFormModal let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-title\">Todo item</h4>\n        <button\n            type=\"button\"\n            class=\"btn-close\"\n            aria-describedby=\"modal-title\"\n            (click)=\"modal.dismiss('Cross click')\"\n        ></button>\n    </div>\n    <div class=\"modal-body\">\n        <form #todoItemForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n\n            <app-form-control \n                #textInput \n                [(ngModel)]=\"todoItem.text\" \n                label=\"Text\" \n                name=\"text\" \n                type=\"textarea\" \n                [error]=\"errors['text']\"\n            ></app-form-control>\n\n            <app-form-control \n                #statusInput \n                [(ngModel)]=\"todoItem.status\" \n                label=\"Status\" \n                name=\"status\" \n                [error]=\"errors['status']\"\n            ></app-form-control>\n            \n            <app-date-time-input-group #deadlineInput [(ngModel)]=\"todoItem.deadline\" label=\"Deadline\" name=\"deadline\"></app-date-time-input-group>\n            \n            <button type=\"submit\" class=\"btn btn-success btn-block w-100\">Save</button>\n        </form>\n    </div>\n</ng-template>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { ApiResponse } from './api-response';\nimport { catchError, throwError } from 'rxjs';\nimport { AuthManagerService } from './auth-manager.service';\nimport { MessageService } from './message.service';\n\nexport interface TodoItem {\n  text: string;\n  status: string;\n  deadline: string | null;\n  id: number | null;\n  created_at: string | null;\n  user_id: number | null;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoItemManagerService {\n  todoItems: TodoItem[] = [];\n  filteredTodoItems: TodoItem[] = [];\n\n  constructor(\n    private http: HttpClient,\n    private authManager: AuthManagerService,\n    private messageService: MessageService\n  ) { }\n  \n  emptyTodoItem(): TodoItem {\n    return {\n      id: null,\n      text: '',\n      status: '',\n      deadline: null,\n      created_at: null,\n      user_id: null\n    };\n  }\n\n  getFiltered(): TodoItem[] {\n    return this.filteredTodoItems;\n  }\n\n  find(id: number): TodoItem | null {\n    let items = this.todoItems.filter(i => i.id === id);\n\n    return items.length ? items[0] : null;\n  }\n\n  cloneTodoItem(item: TodoItem): TodoItem {\n    // let newItem: TodoItem;\n    // for (let key in item) {\n    //   newItem[key as keyof TodoItem] = item[key as keyof TodoItem];\n    // }\n\n    // return newItem;\n    \n    return {\n      id: item.id,\n      text: item.text,\n      status: item.status,\n      deadline: item.deadline,\n      created_at: item.created_at,\n      user_id: item.user_id,\n    };\n  }\n\n  load(\n    successCallback: ((response: ApiResponse) => void) | null = null, \n    failureCallback: ((response: HttpErrorResponse) => void) | null = null\n  ): void {\n    this.http.get<ApiResponse>('api/todo')\n      .pipe(\n        catchError((response: HttpErrorResponse) => {\n          this.afterFailureResponse(response, failureCallback);\n          \n          return throwError(() => new Error('Todo items fetch failed.'));\n        })\n      )\n      .subscribe((response: ApiResponse) => {\n        this.todoItems = <TodoItem[]> response.data;\n        this.filteredTodoItems = <TodoItem[]> response.data;\n\n        this.afterSuccessResponse(response, successCallback);\n      });\n  }\n\n  create(\n    item: TodoItem, \n    data: any,\n    successCallback: ((response: ApiResponse) => void) | null = null, \n    failureCallback: ((response: HttpErrorResponse) => void) | null = null\n  ): void {\n    this.http.post<ApiResponse>('api/todo', data)\n      .pipe(\n        catchError((response: HttpErrorResponse) => {\n          this.afterFailureResponse(response, failureCallback);\n          \n          return throwError(() => new Error('Todo creation failed.'));\n        })\n      )\n      .subscribe((response: ApiResponse) => {\n        this.todoItems.push(<TodoItem> <unknown> response.data);\n        this.afterSuccessResponse(response, successCallback);\n      });\n  }\n\n  update(\n    item: TodoItem, \n    data: any,\n    successCallback: ((response: ApiResponse) => void) | null = null, \n    failureCallback: ((response: HttpErrorResponse) => void) | null = null\n  ): void {\n    this.http.put<ApiResponse>('api/todo/' + item.id, data)\n      .pipe(\n        catchError((response: HttpErrorResponse) => {\n          this.afterFailureResponse(response, failureCallback);\n          \n          return throwError(() => new Error('Todo edition failed.'));\n        })\n      )\n      .subscribe((response: ApiResponse) => {\n        let todoItem = <TodoItem> <unknown> response.data;\n        for (let i in this.todoItems) {\n          if (this.todoItems[i].id === todoItem.id) {\n            this.todoItems[i] = todoItem;\n            break;\n          }\n        }\n        this.afterSuccessResponse(response, successCallback);\n      });\n  }\n\n  delete(\n    item: TodoItem, \n    successCallback: ((response: ApiResponse) => void) | null = null, \n    failureCallback: ((response: HttpErrorResponse) => void) | null = null\n  ): void {\n    this.http.delete<ApiResponse>('api/todo/' + item.id)\n      .pipe(\n        catchError((response: HttpErrorResponse) => {\n          this.afterFailureResponse(response, failureCallback);\n          \n          return throwError(() => new Error('Todo deletion failed.'));\n        })\n      )\n      .subscribe((response: ApiResponse) => {\n        this.todoItems.splice(this.todoItems.indexOf(item), 1);\n        this.afterSuccessResponse(response, successCallback);\n      });\n  }\n\n  private afterSuccessResponse(\n    response: ApiResponse,\n    successCallback: ((response: ApiResponse) => void) | null = null\n  ): void {\n    this.authManager.updateSession();\n    if (response.message) {\n      this.messageService.add(response.message);\n    }\n    if (successCallback) {\n      successCallback(response);\n    }\n  }\n\n  private afterFailureResponse(\n    response: HttpErrorResponse, \n    failureCallback: ((response: HttpErrorResponse) => void) | null = null\n  ): void {\n    this.authManager.updateSession();\n    if (response.error.error) {\n      this.messageService.add(response.error.error, 'danger');\n    }\n    if (failureCallback) {\n      failureCallback(response);\n    }\n  }\n}\n","import { Component, TemplateRef } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { TodoItem, TodoItemManagerService } from '../todo-item-manager.service';\nimport { AuthManagerService } from '../auth-manager.service';\n\n@Component({\n  selector: 'app-todo-search-form',\n  templateUrl: './todo-search-form.component.html',\n  styleUrls: ['./todo-search-form.component.css']\n})\nexport class TodoSearchFormComponent {\n  readonly ASC = 'ASC';\n  readonly DESC = 'DESC';\n  textSearch: string = '';\n  statusSearch: string = '';\n  deadlineFrom: string = '';\n  deadlineTo: string = '';\n  createdFrom: string = '';\n  createdTo: string = '';\n  sortBy: string = '';\n  sortDirection: string = this.ASC;\n\n  constructor(\n    private  todoItemManager: TodoItemManagerService,\n    private modalService: NgbModal,\n    private authManager: AuthManagerService\n  ) { }\n\n  onSearch(): void {\n    this.todoItemManager.filteredTodoItems = this.todoItemManager.todoItems\n      .filter(t => this.textSearch ? t.text.includes(this.textSearch) : true)\n      .filter(t => this.statusSearch ? t.status.includes(this.statusSearch) : true)\n      .filter(t => this.deadlineFrom ? (t.deadline && (t.deadline >= this.deadlineFrom)) : true)\n      .filter(t => this.deadlineTo ? (t.deadline && (t.deadline <= this.deadlineTo)) : true)\n      .filter(t => this.createdFrom ? (t.created_at && (t.created_at >= this.createdFrom)) : true)\n      .filter(t => this.createdTo ? (t.created_at && (t.created_at <= this.createdTo)) : true);\n\n    if (this.sortBy) {\n      let key = this.sortBy as keyof TodoItem;\n      this.todoItemManager.filteredTodoItems = this.todoItemManager.filteredTodoItems\n        .filter(t => t[key] !== null)\n        .sort((a: TodoItem, b: TodoItem): number => {\n          let first = a[key] as string;\n          let second = b[key] as string;\n          if (first === second) {\n            return 0;\n          } else if ((this.sortDirection === this.ASC) ? (first < second) : (first > second)) {\n            return -1;\n          } else {\n            return 1;\n          }\n        });\n    }\n    \n    this.modalService.dismissAll();\n    this.authManager.keepSessionAlive();\n  }\n\n  open(content: TemplateRef<any>) {\n\t\tthis.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then(() => {}, () => {});\n\t}\n}\n","<button class=\"btn btn-primary mr-3\" (click)=\"open(todoSearchModal)\">\n    Filter todos\n</button>\n\n<ng-template #todoSearchModal let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-title\">Search todos</h4>\n        <button\n            type=\"button\"\n            class=\"btn-close\"\n            aria-describedby=\"modal-title\"\n            (click)=\"modal.dismiss('Cross click')\"\n        ></button>\n    </div>\n    <div class=\"modal-body\">\n        <form #todoSearchForm=\"ngForm\" (ngSubmit)=\"onSearch()\">\n\n            <app-form-control #textSearchInput [(ngModel)]=\"textSearch\" label=\"Text\" name=\"text\"></app-form-control>\n            \n            <app-form-control #statusSearchInput [(ngModel)]=\"statusSearch\" label=\"Status\" name=\"status\"></app-form-control>\n\n            <app-date-time-input-group label=\"Created from\" name=\"createdFrom\" [(ngModel)]=\"createdFrom\"></app-date-time-input-group>\n            <app-date-time-input-group label=\"Created to\" name=\"createdTo\" [(ngModel)]=\"createdTo\"></app-date-time-input-group>\n            <app-date-time-input-group label=\"Deadline from\" name=\"deadlineFrom\" [(ngModel)]=\"deadlineFrom\"></app-date-time-input-group>\n            <app-date-time-input-group label=\"Deadline to\" name=\"deadlineFrom\" [(ngModel)]=\"deadlineTo\"></app-date-time-input-group>\n\n            <div class=\"my-3\">\n                <label for=\"statusInput\" class=\"form-label\">Sort by</label>\n                <select [(ngModel)]=\"sortBy\" name=\"sort_by\" class=\"form-select\">\n                    <option ngValue=\"\" selected>None</option>\n                    <option ngValue=\"text\">Text</option>\n                    <option ngValue=\"status\">Status</option>\n                    <option ngValue=\"deadline\">Deadline</option>\n                    <option ngValue=\"createed_at\">Created at</option>\n                </select>\n            </div>\n\n            <div class=\"form-check mt-3\">\n                <label for=\"sortDirectionAsc\" class=\"form-label\">Sort ascending</label>\n                <input \n                    type=\"radio\" \n                    name=\"sort_direction\" \n                    id=\"sortDirectionAsc\" \n                    [(ngModel)]=\"sortDirection\" \n                    value=\"ASC\" \n                    class=\"form-check-input\"\n                    checked\n                >\n            </div>\n\n            <div class=\"form-check mb-3\">\n                <label for=\"sortDirectionDesc\" class=\"form-label\">Sort descending</label>\n                <input \n                    type=\"radio\" \n                    name=\"sort_direction\" \n                    id=\"sortDirectionDesc\" \n                    [(ngModel)]=\"sortDirection\" \n                    value=\"DESC\" \n                    class=\"form-check-input\"\n                >\n            </div>\n\n            <button type=\"reset\" class=\"btn btn-danger btn-block w-100 mb-3\">Reset</button>\n\n            <button type=\"submit\" class=\"btn btn-success btn-block w-100\">Search</button>\n        </form>\n    </div>\n</ng-template>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}